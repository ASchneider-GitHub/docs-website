name: Check for broken links

on:
  workflow_dispatch:
  pull_request:
    types: [opened, labeled, unlabeled, edited]
  schedule:
    - cron: '0 17 * * 0' # 9AM PST (5PM UTC) on Sunday mornings

env:
  BOT_NAME: svc-docs-eng-opensource-bot
  BOT_EMAIL: svc-docs-eng-opensource-bot@newrelic.com

jobs:
  check-links:
    name: Check for broken links
    runs-on: ubuntu-latest
    outputs:
      broken-links: ${{ steps.check-changes.broken-links }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: liz/link-check
          persist-credentials: false

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Make executeable
        run: chmod +x scripts/actions/check-links/check-links.sh

      - name: Check links
        run: scripts/actions/check-links/check-links.sh
        id: check-links

      - name: Check for changes
        id: check-changes
        run: |
          git diff --exit-code
          if [ $? -eq 0 ]; then
            echo "No broken links ðŸŽ‰"
            echo "broken-links=false" >> $GITHUB_OUTPUT
          else
            echo "broken-links=true" >> $GITHUB_OUTPUT
          fi

  create_issue:
    name: Create broken link issue
    needs: check-links
    if: ${{needs.check-links.outputs.broken-links}} == 'true'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Create broken link issue
        run: |
          gh issue create \
          --title "Broken link/s found" \
          --body-file "scripts/actions/check-links/broken-links-filter.txt"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
